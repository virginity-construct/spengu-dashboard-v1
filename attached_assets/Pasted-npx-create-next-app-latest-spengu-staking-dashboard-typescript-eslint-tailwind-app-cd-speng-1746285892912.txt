npx create-next-app@latest spengu-staking-dashboard --typescript --eslint --tailwind --app
cd spengu-staking-dashboard

npm install @solana/web3.js @solana/wallet-adapter-react @solana/wallet-adapter-react-ui @solana/wallet-adapter-wallets @solana/wallet-adapter-base

echo 'TAILWIND CSS CONFIGURATION...' && npx tailwindcss init -p

# Enable Tailwind by editing tailwind.config.ts
echo "
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ['./app/**/*.{js,ts,jsx,tsx}', './pages/**/*.{js,ts,jsx,tsx}', './components/**/*.{js,ts,jsx,tsx}'],
  theme: { extend: {} },
  plugins: [],
}
" > tailwind.config.ts

# Replace global CSS to include Tailwind
echo "@tailwind base;
@tailwind components;
@tailwind utilities;" > app/globals.css

# Create basic layout + wallet connect button
mkdir components
echo "import { useWallet, WalletMultiButton } from '@solana/wallet-adapter-react-ui';

require('@solana/wallet-adapter-react-ui/styles.css');

export default function Header() {
  return (
    <div className='flex justify-between items-center p-4 bg-black text-white'>
      <h1 className='text-xl font-bold'>SPENGU Staking Dashboard</h1>
      <WalletMultiButton />
    </div>
  );
}" > components/Header.tsx

# Create basic homepage with mock stats
echo "import Header from '../components/Header';

export default function Home() {
  return (
    <main className='min-h-screen bg-gray-900 text-white'>
      <Header />
      <section className='p-6'>
        <h2 className='text-2xl mb-4'>Your Staking Overview</h2>
        <div className='grid grid-cols-2 gap-4'>
          <div className='bg-gray-800 p-4 rounded-lg'>NFTs Staked: 12</div>
          <div className='bg-gray-800 p-4 rounded-lg'>$SPENGU Staked: 4,500</div>
          <div className='bg-gray-800 p-4 rounded-lg'>Estimated Daily Yield: 37 SPENGU</div>
          <div className='bg-gray-800 p-4 rounded-lg'>Claimable Rewards: 112 SPENGU</div>
        </div>
      </section>
    </main>
  );
}" > app/page.tsx

# Set up Wallet Context Provider
mkdir contexts
echo "import { FC, ReactNode, useMemo } from 'react';
import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';
import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';
import { PhantomWalletAdapter } from '@solana/wallet-adapter-wallets';
import { WalletModalProvider } from '@solana/wallet-adapter-react-ui';
import { clusterApiUrl } from '@solana/web3.js';

export const WalletConnectionProvider: FC<{ children: ReactNode }> = ({ children }) => {
  const network = WalletAdapterNetwork.Devnet;
  const endpoint = useMemo(() => clusterApiUrl(network), [network]);
  const wallets = useMemo(() => [new PhantomWalletAdapter()], [network]);

  return (
    <ConnectionProvider endpoint={endpoint}>
      <WalletProvider wallets={wallets} autoConnect>
        <WalletModalProvider>{children}</WalletModalProvider>
      </WalletProvider>
    </ConnectionProvider>
  );
};
" > contexts/Wallet.tsx

# Inject context provider in root layout
echo "'use client';
import './globals.css'
import { WalletConnectionProvider } from '../contexts/Wallet'

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang='en'>
      <body>
        <WalletConnectionProvider>{children}</WalletConnectionProvider>
      </body>
    </html>
  )
}" > app/layout.tsx

# Done. Now run the dev server
npm run dev
